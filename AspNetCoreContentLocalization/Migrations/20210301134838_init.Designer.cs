// <auto-generated />
using System;
using AspNetCoreContentLocalization.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AspNetCoreContentLocalization.Migrations
{
    [DbContext(typeof(Storage))]
    [Migration("20210301134838_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AspNetCoreContentLocalization.Data.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("DescriptionId")
                        .HasColumnType("int");

                    b.Property<int>("NameId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("AspNetCoreContentLocalization.Data.Entities.Culture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Cultures");
                });

            modelBuilder.Entity("AspNetCoreContentLocalization.Data.Entities.Library", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NameId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NameId");

                    b.ToTable("Librarys");
                });

            modelBuilder.Entity("AspNetCoreContentLocalization.Data.Entities.Localization", b =>
                {
                    b.Property<int>("LocalizationSetId")
                        .HasColumnType("int");

                    b.Property<int>("CultureId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocalizationSetId", "CultureId");

                    b.HasIndex("CultureId");

                    b.ToTable("Localizations");
                });

            modelBuilder.Entity("AspNetCoreContentLocalization.Data.Entities.LocalizationSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FK_Books_LocalizationSets_AuthorId")
                        .HasColumnType("int");

                    b.Property<int?>("FK_Books_LocalizationSets_DescriptionId")
                        .HasColumnType("int");

                    b.Property<int?>("FK_Books_LocalizationSets_NameId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FK_Books_LocalizationSets_AuthorId")
                        .IsUnique()
                        .HasFilter("[FK_Books_LocalizationSets_AuthorId] IS NOT NULL");

                    b.HasIndex("FK_Books_LocalizationSets_DescriptionId")
                        .IsUnique()
                        .HasFilter("[FK_Books_LocalizationSets_DescriptionId] IS NOT NULL");

                    b.HasIndex("FK_Books_LocalizationSets_NameId")
                        .IsUnique()
                        .HasFilter("[FK_Books_LocalizationSets_NameId] IS NOT NULL");

                    b.ToTable("LocalizationSets");
                });

            modelBuilder.Entity("AspNetCoreContentLocalization.Data.Entities.Library", b =>
                {
                    b.HasOne("AspNetCoreContentLocalization.Data.Entities.LocalizationSet", "Name")
                        .WithMany()
                        .HasForeignKey("NameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNetCoreContentLocalization.Data.Entities.Localization", b =>
                {
                    b.HasOne("AspNetCoreContentLocalization.Data.Entities.Culture", "Culture")
                        .WithMany()
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspNetCoreContentLocalization.Data.Entities.LocalizationSet", "LocalizationSet")
                        .WithMany("Localizations")
                        .HasForeignKey("LocalizationSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspNetCoreContentLocalization.Data.Entities.LocalizationSet", b =>
                {
                    b.HasOne("AspNetCoreContentLocalization.Data.Entities.Book", null)
                        .WithOne("Author")
                        .HasForeignKey("AspNetCoreContentLocalization.Data.Entities.LocalizationSet", "FK_Books_LocalizationSets_AuthorId");

                    b.HasOne("AspNetCoreContentLocalization.Data.Entities.Book", null)
                        .WithOne("Description")
                        .HasForeignKey("AspNetCoreContentLocalization.Data.Entities.LocalizationSet", "FK_Books_LocalizationSets_DescriptionId");

                    b.HasOne("AspNetCoreContentLocalization.Data.Entities.Book", null)
                        .WithOne("Name")
                        .HasForeignKey("AspNetCoreContentLocalization.Data.Entities.LocalizationSet", "FK_Books_LocalizationSets_NameId");
                });
#pragma warning restore 612, 618
        }
    }
}
